openapi: "3.0.1"
info:
  title: "Swagger Petstore V1 - OpenAPI 3.0"
  description: "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.\
    \  You can find out more about"
  version: "1.0.11"
paths:
  /pets/api/v1/pet/{petId}:
    get:
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
        - name: name
          in: query
          description: name of pet to return
          required: true
          schema:
            type: integer
            format: int64
            minLength: 3
            maxLength: 30
            pattern: '([a-zA-Z]){3,}'
      responses:
        "400":
          description: "400 response"
          content: {}
        "404":
          description: "404 response"
          content: {}
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
    post:
      parameters:
        - name: "petId"
          in: "path"
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: "integer"
            format: "int64"
            minimum: 1
            maximum: 100
        - name: "status"
          in: "query"
          description: Status of pet that needs to be updated
          schema:
            type: "string"
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pet"
        required: true
      responses:
        "400":
          description: "400 response"
          content: {}
        "404":
          description: "404 response"
          content: {}
        "204":
          description: "204 response"
          content: {}
components:
  schemas:
    Pet:
      required:
        - "name"
        - "id"
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          minimum: 1
          maximum: 100
          nullable: false
        name:
          type: "string"
          minLength: 3
          maxLength: 30
          pattern: '([a-zA-Z]){3,}'
        status:
          type: "string"
          nullable: true
          enum:
            - available
            - pending
            - sold
